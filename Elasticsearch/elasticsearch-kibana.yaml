
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-credentials
type: Opaque
data:
# Base64 encoded username and password
  username: YWRtaW4K
  password: YWRtaW4K


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
spec:
#  DNS name used by the StatefulSet
  serviceName: "elasticsearch"
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            - sh
            - -c
            - |
              mkdir -p /data/application/elasticsearch/$(MY_POD_NAME) && \
              chown -R 1000:1000 /data/application/elasticsearch/$(MY_POD_NAME)
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                # Dynamically gets the pod name
                  fieldPath: metadata.name
          volumeMounts:
          # Access to external disk
            - mountPath: /data/application/elasticsearch
              name: elasticsearch-data
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
          ports:
            # HTTP port
            - containerPort: 9200
            # Internal cluster communication port
            - containerPort: 9300
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: cluster.name
              value: "k8s-elasticsearch-cluster"
            - name: discovery.seed_hosts
              value: "elasticsearch-0.elasticsearch,elasticsearch-1.elasticsearch,elasticsearch-2.elasticsearch"
            - name: cluster.initial_master_nodes
              value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.security.http.ssl.enabled
              value: "true"
            - name: xpack.security.http.ssl.key
              # Path to private key for tls comminication
              value: "/usr/share/elasticsearch/config/certs/certs.key"
            - name: xpack.security.http.ssl.certificate
              # Path to certificate file for tls comminication
              value: "/usr/share/elasticsearch/config/certs/gateway.pem"
            - name: xpack.security.http.ssl.certificate_authorities
              # Path to certificate authority for tls comminication
              value: "/usr/share/elasticsearch/config/certs/ca.crt"
            - name: xpack.security.transport.ssl.enabled
              value: "true"
            - name: xpack.security.transport.ssl.verification_mode
              value: "none"
            - name: xpack.security.transport.ssl.key
              value: "/usr/share/elasticsearch/config/certs/gateway.key"
            - name: xpack.security.transport.ssl.certificate
              value: "/usr/share/elasticsearch/config/certs/gateway.pem"
            - name: xpack.security.transport.ssl.certificate_authorities
              value: "/usr/share/elasticsearch/config/certs/ca.crt"
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-credentials
                  key: username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-credentials
                  key: password
            - name: node.master
              value: "true"
            - name: node.data
              value: "true"
            - name: node.ingest
              value: "true"
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /usr/share/elasticsearch/data
              # Separate folder for each pod
              subPathExpr: "$(MY_POD_NAME)"
            - name: elastic-certs
              mountPath: /usr/share/elasticsearch/config/certs
              readOnly: true
          resources:
            requests:
              memory: "4Gi"
              cpu: "2"
            limits:
              memory: "8Gi"
              cpu: "4"
      volumes:
        - name: elasticsearch-data
          hostPath:
            path: /patho/to/volumefor/elasticsearch
            type: DirectoryOrCreate
        - name: elastic-certs
          hostPath:
            path: /path/to/certs
            type: DirectoryOrCreate


---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  type: NodePort
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      nodePort: 30010
  selector:
    app: elasticsearch

---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-nodeport
  labels:
    app: elasticsearch
spec:
  type: LoadBalancer
  ports:
    - name: http
      port: 9200
      targetPort: 9200
    - name: transport
      port: 9300
      targetPort: 9300
  selector:
    app: elasticsearch


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      initContainers:
        - name: fix-permissions
          image: busybox
          command: ["sh", "-c", "chown -R 1000:1000 /usr/share/kibana/data"]
          volumeMounts:
            - mountPath: /usr/share/kibana/data
              name: kibana-data
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:7.10.2
          ports:
            - containerPort: 5601
          volumeMounts:
            - mountPath: /usr/share/kibana/data
              name: kibana-data
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "https://visaelastic.gateway.com.tr:9200"
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-credentials
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-credentials
                  key: password
            - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
              value: "none"
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"
            limits:
              memory: "4Gi"
              cpu: "2"
      volumes:
        - name: kibana-data
          hostPath:
            path: /path/to/volumefor/kibana
            type: DirectoryOrCreate


---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  type: NodePort
  ports:
    - name: http
      port: 5601
      targetPort: 5601
      nodePort: 30009
  selector:
    app: kibana
